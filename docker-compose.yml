version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_DB=${POSTGRES_NAME}

  redis:
    container_name: redis
    image: redis:alpine

  train:
    container_name: train
    build:
      context: ./train
      dockerfile: Dockerfile
    volumes:
      - ./train:/train
    environment:
      - REDIS_HOST_NAME=${REDIS_HOST_NAME}
      - REDIS_PORT=${REDIS_PORT}
      - STREAM_KEY=${STREAM_KEY}
    stop_signal: SIGINT
    restart: on-failure
    depends_on:
      - redis

  central:
    container_name: central
    restart: on-failure
    build:
      context: ./central
      dockerfile: Dockerfile
    volumes:
      - ./central:/central
    environment:
      - REDIS_HOST_NAME=${REDIS_HOST_NAME}
      - REDIS_PORT=${REDIS_PORT}
      - STREAM_KEY=${STREAM_KEY}
    command: python main.py
    depends_on:
      - redis

  lineman:
    container_name: lineman
    restart: on-failure
    build:
      context: ./lineman
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./lineman:/lineman
    environment:
      - SECRET_KEY=${SECRET_KEY}

    command: flask --app main run --debug --host=0.0.0.0 # DO ZMIANY
    stop_signal: SIGINT

  celery:
    build:
      context: ./train
      dockerfile: Dockerfile
    command: celery -A main.app worker -l INFO
    restart: on-failure
    volumes:
      - ./train:/train
    env_file:
      - .env
    depends_on:
      - train
      - redis
      - postgres

  celery_beat:
    build:
      context: ./train
      dockerfile: Dockerfile
    command: celery -A main.app beat -l INFO
    volumes:
      - ./train:/train
    env_file:
      - .env
    depends_on:
      - train
      - redis
      - postgres
